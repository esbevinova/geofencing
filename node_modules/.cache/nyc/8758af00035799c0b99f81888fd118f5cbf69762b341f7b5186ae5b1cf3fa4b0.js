var cov_24y4bopkql=function(){var path="/Users/katya/Documents/GitHub/geofencing/data/geofences.js";var hash="f2427f9c03ed4a84bb15df53a7e9194316c12e0d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/katya/Documents/GitHub/geofencing/data/geofences.js",statementMap:{"0":{start:{line:4,column:25},end:{line:4,column:48}},"1":{start:{line:5,column:21},end:{line:5,column:39}},"2":{start:{line:6,column:14},end:{line:6,column:36}},"3":{start:{line:7,column:17},end:{line:7,column:42}},"4":{start:{line:8,column:18},end:{line:8,column:44}},"5":{start:{line:11,column:0},end:{line:137,column:1}},"6":{start:{line:13,column:8},end:{line:15,column:9}},"7":{start:{line:14,column:12},end:{line:14,column:48}},"8":{start:{line:16,column:8},end:{line:18,column:9}},"9":{start:{line:17,column:12},end:{line:17,column:54}},"10":{start:{line:19,column:8},end:{line:21,column:9}},"11":{start:{line:20,column:12},end:{line:20,column:58}},"12":{start:{line:22,column:8},end:{line:24,column:9}},"13":{start:{line:23,column:12},end:{line:23,column:40}},"14":{start:{line:26,column:25},end:{line:26,column:42}},"15":{start:{line:27,column:26},end:{line:36,column:9}},"16":{start:{line:37,column:23},end:{line:37,column:60}},"17":{start:{line:38,column:8},end:{line:40,column:9}},"18":{start:{line:39,column:12},end:{line:39,column:41}},"19":{start:{line:41,column:22},end:{line:41,column:39}},"20":{start:{line:42,column:8},end:{line:42,column:37}},"21":{start:{line:50,column:26},end:{line:50,column:50}},"22":{start:{line:51,column:8},end:{line:51,column:50}},"23":{start:{line:61,column:8},end:{line:63,column:9}},"24":{start:{line:62,column:12},end:{line:62,column:46}},"25":{start:{line:65,column:23},end:{line:65,column:66}},"26":{start:{line:66,column:25},end:{line:66,column:42}},"27":{start:{line:67,column:29},end:{line:67,column:68}},"28":{start:{line:68,column:8},end:{line:70,column:9}},"29":{start:{line:69,column:12},end:{line:69,column:55}},"30":{start:{line:71,column:8},end:{line:71,column:28}},"31":{start:{line:77,column:8},end:{line:79,column:9}},"32":{start:{line:78,column:12},end:{line:78,column:46}},"33":{start:{line:80,column:23},end:{line:80,column:36}},"34":{start:{line:81,column:25},end:{line:81,column:42}},"35":{start:{line:82,column:28},end:{line:82,column:80}},"36":{start:{line:83,column:8},end:{line:83,column:27}},"37":{start:{line:96,column:8},end:{line:99,column:9}},"38":{start:{line:98,column:12},end:{line:98,column:46}},"39":{start:{line:101,column:25},end:{line:101,column:42}},"40":{start:{line:102,column:29},end:{line:102,column:80}},"41":{start:{line:103,column:8},end:{line:103,column:28}},"42":{start:{line:114,column:8},end:{line:114,column:42}},"43":{start:{line:115,column:8},end:{line:115,column:116}},"44":{start:{line:116,column:22},end:{line:116,column:36}},"45":{start:{line:117,column:8},end:{line:117,column:46}},"46":{start:{line:118,column:8},end:{line:118,column:87}},"47":{start:{line:119,column:26},end:{line:119,column:43}},"48":{start:{line:120,column:32},end:{line:120,column:53}},"49":{start:{line:122,column:8},end:{line:134,column:11}},"50":{start:{line:123,column:10},end:{line:133,column:12}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:81},end:{line:43,column:5}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:49,column:4},end:{line:49,column:5}},loc:{start:{line:49,column:24},end:{line:52,column:5}},line:49},"2":{name:"(anonymous_2)",decl:{start:{line:59,column:4},end:{line:59,column:5}},loc:{start:{line:59,column:25},end:{line:72,column:5}},line:59},"3":{name:"(anonymous_3)",decl:{start:{line:75,column:4},end:{line:75,column:5}},loc:{start:{line:75,column:28},end:{line:84,column:5}},line:75},"4":{name:"(anonymous_4)",decl:{start:{line:95,column:4},end:{line:95,column:5}},loc:{start:{line:95,column:41},end:{line:104,column:5}},line:95},"5":{name:"(anonymous_5)",decl:{start:{line:112,column:4},end:{line:112,column:5}},loc:{start:{line:112,column:66},end:{line:135,column:7}},line:112},"6":{name:"(anonymous_6)",decl:{start:{line:122,column:48},end:{line:122,column:49}},loc:{start:{line:122,column:63},end:{line:134,column:9}},line:122}},branchMap:{"0":{loc:{start:{line:13,column:8},end:{line:15,column:9}},type:"if",locations:[{start:{line:13,column:8},end:{line:15,column:9}},{start:{line:13,column:8},end:{line:15,column:9}}],line:13},"1":{loc:{start:{line:13,column:12},end:{line:13,column:57}},type:"binary-expr",locations:[{start:{line:13,column:13},end:{line:13,column:22}},{start:{line:13,column:28},end:{line:13,column:56}}],line:13},"2":{loc:{start:{line:16,column:8},end:{line:18,column:9}},type:"if",locations:[{start:{line:16,column:8},end:{line:18,column:9}},{start:{line:16,column:8},end:{line:18,column:9}}],line:16},"3":{loc:{start:{line:16,column:12},end:{line:16,column:65}},type:"binary-expr",locations:[{start:{line:16,column:13},end:{line:16,column:26}},{start:{line:16,column:32},end:{line:16,column:64}}],line:16},"4":{loc:{start:{line:19,column:8},end:{line:21,column:9}},type:"if",locations:[{start:{line:19,column:8},end:{line:21,column:9}},{start:{line:19,column:8},end:{line:21,column:9}}],line:19},"5":{loc:{start:{line:19,column:12},end:{line:19,column:73}},type:"binary-expr",locations:[{start:{line:19,column:13},end:{line:19,column:30}},{start:{line:19,column:36},end:{line:19,column:72}}],line:19},"6":{loc:{start:{line:22,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:22,column:8},end:{line:24,column:9}},{start:{line:22,column:8},end:{line:24,column:9}}],line:22},"7":{loc:{start:{line:38,column:8},end:{line:40,column:9}},type:"if",locations:[{start:{line:38,column:8},end:{line:40,column:9}},{start:{line:38,column:8},end:{line:40,column:9}}],line:38},"8":{loc:{start:{line:61,column:8},end:{line:63,column:9}},type:"if",locations:[{start:{line:61,column:8},end:{line:63,column:9}},{start:{line:61,column:8},end:{line:63,column:9}}],line:61},"9":{loc:{start:{line:68,column:8},end:{line:70,column:9}},type:"if",locations:[{start:{line:68,column:8},end:{line:70,column:9}},{start:{line:68,column:8},end:{line:70,column:9}}],line:68},"10":{loc:{start:{line:77,column:8},end:{line:79,column:9}},type:"if",locations:[{start:{line:77,column:8},end:{line:79,column:9}},{start:{line:77,column:8},end:{line:79,column:9}}],line:77},"11":{loc:{start:{line:96,column:8},end:{line:99,column:9}},type:"if",locations:[{start:{line:96,column:8},end:{line:99,column:9}},{start:{line:96,column:8},end:{line:99,column:9}}],line:96}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"f2427f9c03ed4a84bb15df53a7e9194316c12e0d"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/*
This is the file that includes all of the functions that can manipulate geofences collection.
*/const mongoCollections=(cov_24y4bopkql.s[0]++,require("./collection"));const{ObjectId}=(cov_24y4bopkql.s[1]++,require('mongodb'));const users=(cov_24y4bopkql.s[2]++,mongoCollections.users);const children=(cov_24y4bopkql.s[3]++,mongoCollections.children);const geofences=(cov_24y4bopkql.s[4]++,mongoCollections.geofences);cov_24y4bopkql.s[5]++;module.exports={async addGeofence(parentId,geofenceName,formattedAddress,lat,lng,radius){cov_24y4bopkql.f[0]++;cov_24y4bopkql.s[6]++;if((cov_24y4bopkql.b[1][0]++,!parentId)||(cov_24y4bopkql.b[1][1]++,typeof parentId!=="string")){cov_24y4bopkql.b[0][0]++;cov_24y4bopkql.s[7]++;throw`Error: ${userId} is invalid`;}else{cov_24y4bopkql.b[0][1]++;}cov_24y4bopkql.s[8]++;if((cov_24y4bopkql.b[3][0]++,!geofenceName)||(cov_24y4bopkql.b[3][1]++,typeof geofenceName!=="string")){cov_24y4bopkql.b[2][0]++;cov_24y4bopkql.s[9]++;throw`Error: ${geofenceName} is invalid`;}else{cov_24y4bopkql.b[2][1]++;}cov_24y4bopkql.s[10]++;if((cov_24y4bopkql.b[5][0]++,!formattedAddress)||(cov_24y4bopkql.b[5][1]++,typeof formattedAddress!=="string")){cov_24y4bopkql.b[4][0]++;cov_24y4bopkql.s[11]++;throw`Error: ${formattedAddress} is invalid`;}else{cov_24y4bopkql.b[4][1]++;}cov_24y4bopkql.s[12]++;if(radius){cov_24y4bopkql.b[6][0]++;cov_24y4bopkql.s[13]++;intRadius=parseInt(radius);}else{cov_24y4bopkql.b[6][1]++;}const geofence=(cov_24y4bopkql.s[14]++,await geofences());let newGeofence=(cov_24y4bopkql.s[15]++,{parentId,geofenceName,formattedAddress,lat,lng,radius:intRadius,registeredChildren:[],CreatedAt:new Date()});const insert=(cov_24y4bopkql.s[16]++,await geofence.insertOne(newGeofence));cov_24y4bopkql.s[17]++;if(insert.insertedCount===0){cov_24y4bopkql.b[7][0]++;cov_24y4bopkql.s[18]++;throw"Could not add person";}else{cov_24y4bopkql.b[7][1]++;}const newId=(cov_24y4bopkql.s[19]++,insert.insertedId);cov_24y4bopkql.s[20]++;return await this.get(newId);},/**
     *
     * @returns an array of all the geofences added to the collection
     */async allGeofences(){cov_24y4bopkql.f[1]++;const geofences=(cov_24y4bopkql.s[21]++,await this.addGeofence());cov_24y4bopkql.s[22]++;return await geofences.find({}).toArray();},/**
     * get the geofence from the database
     * @param {string} id
     * @returns the geofence from the database
     */async getGeofence(id){cov_24y4bopkql.f[2]++;cov_24y4bopkql.s[23]++;//given id, return the user from the database
if(!id){cov_24y4bopkql.b[8][0]++;cov_24y4bopkql.s[24]++;throw"Error: no id was provided";}else{cov_24y4bopkql.b[8][1]++;}var targetID=(cov_24y4bopkql.s[25]++,ObjectId.createFromHexString(id.toString()));const geofence=(cov_24y4bopkql.s[26]++,await geofences());const findGeofence=(cov_24y4bopkql.s[27]++,await geofence.findOne({_id:targetID}));cov_24y4bopkql.s[28]++;if(findGeofence===null){cov_24y4bopkql.b[9][0]++;cov_24y4bopkql.s[29]++;throw"No geofence was found with that id";}else{cov_24y4bopkql.b[9][1]++;}cov_24y4bopkql.s[30]++;return findGeofence;},//11.03
async getMyGeofences(id){cov_24y4bopkql.f[3]++;cov_24y4bopkql.s[31]++;//given id, return the user from the database
if(!id){cov_24y4bopkql.b[10][0]++;cov_24y4bopkql.s[32]++;throw"Error: no id was provided";}else{cov_24y4bopkql.b[10][1]++;}var targetID=(cov_24y4bopkql.s[33]++,id.toString());const geofence=(cov_24y4bopkql.s[34]++,await geofences());const myGeofences=(cov_24y4bopkql.s[35]++,await geofence.find({parentId:targetID}).toArray());cov_24y4bopkql.s[36]++;return myGeofences;},//11.03.end
/**
     * get an already existing geofence from database by searching its name
     * @param {string} geofenceName
     * @returns the geofence from the database
     */async getGeofenceByName(geofenceName){cov_24y4bopkql.f[4]++;cov_24y4bopkql.s[37]++;if(!geofenceName){cov_24y4bopkql.b[11][0]++;cov_24y4bopkql.s[38]++;throw"Geofence name not provided";}else{cov_24y4bopkql.b[11][1]++;}const geofence=(cov_24y4bopkql.s[39]++,await geofences());const findGeofence=(cov_24y4bopkql.s[40]++,await geofence.findOne({geofenceName:geofenceName}));cov_24y4bopkql.s[41]++;return findGeofence;},/**
     * add the child to geofences's array children in geofences collection
     * @param {string} geofencesName
     * @param {string} childsPhoneNumber
     * @returns the geofence with updated registeredChildren array
     */async addTheChildToGeofence(geofencesName,childsPhoneNumber){cov_24y4bopkql.f[5]++;cov_24y4bopkql.s[42]++;//adding a child to geofence
childCollection=await children();cov_24y4bopkql.s[43]++;childFound=await childCollection.findOne({childPhoneNumber:childsPhoneNumber},{projection:{_id:1}});let childId=(cov_24y4bopkql.s[44]++,childFound._id);cov_24y4bopkql.s[45]++;geofenceCollection=await geofences();cov_24y4bopkql.s[46]++;geofenceFound=await geofenceCollection.findOne({geofenceName:geofencesName});let geofencesId=(cov_24y4bopkql.s[47]++,geofenceFound._id);let parsedGeofencesId=(cov_24y4bopkql.s[48]++,ObjectId(geofencesId));cov_24y4bopkql.s[49]++;return this.get(parsedGeofencesId).then(currentUser=>{cov_24y4bopkql.f[6]++;cov_24y4bopkql.s[50]++;return geofenceCollection.updateOne({_id:parsedGeofencesId},{$addToSet:{registeredChildren:{childId:childId,AddedAt:new Date()}}});});}};