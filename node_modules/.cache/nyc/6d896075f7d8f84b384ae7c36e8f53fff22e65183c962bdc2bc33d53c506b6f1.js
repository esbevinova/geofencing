var cov_1vg3x44zeq=function(){var path="/Users/katya/Documents/GitHub/geofencing/data/users.js";var hash="5e26ed920631624fae01b3e0b39470fdf7a08b8b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/katya/Documents/GitHub/geofencing/data/users.js",statementMap:{"0":{start:{line:4,column:25},end:{line:4,column:48}},"1":{start:{line:5,column:14},end:{line:5,column:36}},"2":{start:{line:6,column:15},end:{line:6,column:32}},"3":{start:{line:7,column:21},end:{line:7,column:39}},"4":{start:{line:8,column:17},end:{line:8,column:42}},"5":{start:{line:9,column:18},end:{line:9,column:44}},"6":{start:{line:11,column:0},end:{line:235,column:1}},"7":{start:{line:19,column:8},end:{line:21,column:9}},"8":{start:{line:20,column:12},end:{line:20,column:50}},"9":{start:{line:22,column:8},end:{line:24,column:9}},"10":{start:{line:23,column:12},end:{line:23,column:50}},"11":{start:{line:25,column:8},end:{line:27,column:9}},"12":{start:{line:26,column:12},end:{line:26,column:46}},"13":{start:{line:28,column:8},end:{line:30,column:9}},"14":{start:{line:29,column:12},end:{line:29,column:51}},"15":{start:{line:31,column:8},end:{line:33,column:9}},"16":{start:{line:32,column:12},end:{line:32,column:50}},"17":{start:{line:34,column:8},end:{line:36,column:9}},"18":{start:{line:35,column:12},end:{line:35,column:53}},"19":{start:{line:37,column:23},end:{line:37,column:36}},"20":{start:{line:38,column:24},end:{line:49,column:9}},"21":{start:{line:50,column:23},end:{line:50,column:56}},"22":{start:{line:51,column:8},end:{line:53,column:9}},"23":{start:{line:52,column:12},end:{line:52,column:41}},"24":{start:{line:54,column:22},end:{line:54,column:39}},"25":{start:{line:55,column:8},end:{line:55,column:37}},"26":{start:{line:64,column:12},end:{line:64,column:92}},"27":{start:{line:64,column:47},end:{line:64,column:92}},"28":{start:{line:65,column:12},end:{line:69,column:13}},"29":{start:{line:66,column:15},end:{line:66,column:37}},"30":{start:{line:68,column:14},end:{line:68,column:35}},"31":{start:{line:70,column:35},end:{line:70,column:48}},"32":{start:{line:72,column:25},end:{line:72,column:62}},"33":{start:{line:73,column:12},end:{line:73,column:60}},"34":{start:{line:73,column:31},end:{line:73,column:60}},"35":{start:{line:75,column:8},end:{line:75,column:20}},"36":{start:{line:84,column:8},end:{line:87,column:9}},"37":{start:{line:86,column:12},end:{line:86,column:42}},"38":{start:{line:89,column:23},end:{line:89,column:36}},"39":{start:{line:90,column:27},end:{line:90,column:68}},"40":{start:{line:91,column:8},end:{line:91,column:26}},"41":{start:{line:95,column:6},end:{line:98,column:7}},"42":{start:{line:97,column:10},end:{line:97,column:36}},"43":{start:{line:100,column:21},end:{line:100,column:34}},"44":{start:{line:101,column:26},end:{line:101,column:95}},"45":{start:{line:102,column:28},end:{line:102,column:43}},"46":{start:{line:103,column:6},end:{line:103,column:54}},"47":{start:{line:104,column:6},end:{line:104,column:35}},"48":{start:{line:116,column:23},end:{line:116,column:35}},"49":{start:{line:117,column:32},end:{line:117,column:45}},"50":{start:{line:118,column:8},end:{line:132,column:11}},"51":{start:{line:119,column:10},end:{line:131,column:12}},"52":{start:{line:139,column:21},end:{line:139,column:33}},"53":{start:{line:140,column:30},end:{line:140,column:43}},"54":{start:{line:141,column:6},end:{line:157,column:9}},"55":{start:{line:142,column:8},end:{line:156,column:10}},"56":{start:{line:162,column:6},end:{line:162,column:60}},"57":{start:{line:162,column:15},end:{line:162,column:60}},"58":{start:{line:163,column:6},end:{line:163,column:43}},"59":{start:{line:163,column:20},end:{line:163,column:43}},"60":{start:{line:165,column:6},end:{line:165,column:24}},"61":{start:{line:166,column:29},end:{line:166,column:42}},"62":{start:{line:167,column:26},end:{line:169,column:7}},"63":{start:{line:171,column:26},end:{line:171,column:89}},"64":{start:{line:172,column:6},end:{line:174,column:7}},"65":{start:{line:173,column:10},end:{line:173,column:48}},"66":{start:{line:175,column:6},end:{line:175,column:32}},"67":{start:{line:181,column:4},end:{line:181,column:34}},"68":{start:{line:181,column:20},end:{line:181,column:34}},"69":{start:{line:182,column:4},end:{line:182,column:39}},"70":{start:{line:182,column:22},end:{line:182,column:39}},"71":{start:{line:183,column:21},end:{line:183,column:40}},"72":{start:{line:184,column:25},end:{line:184,column:49}},"73":{start:{line:185,column:21},end:{line:185,column:37}},"74":{start:{line:187,column:28},end:{line:187,column:41}},"75":{start:{line:188,column:24},end:{line:190,column:5}},"76":{start:{line:192,column:24},end:{line:192,column:92}},"77":{start:{line:193,column:4},end:{line:195,column:3}},"78":{start:{line:194,column:6},end:{line:194,column:44}},"79":{start:{line:196,column:2},end:{line:196,column:34}},"80":{start:{line:201,column:6},end:{line:201,column:40}},"81":{start:{line:202,column:6},end:{line:202,column:114}},"82":{start:{line:203,column:20},end:{line:203,column:34}},"83":{start:{line:204,column:6},end:{line:204,column:44}},"84":{start:{line:205,column:6},end:{line:205,column:85}},"85":{start:{line:206,column:24},end:{line:206,column:41}},"86":{start:{line:207,column:6},end:{line:207,column:37}},"87":{start:{line:209,column:27},end:{line:209,column:53}},"88":{start:{line:210,column:28},end:{line:210,column:58}},"89":{start:{line:211,column:21},end:{line:211,column:38}},"90":{start:{line:212,column:21},end:{line:212,column:38}},"91":{start:{line:213,column:24},end:{line:213,column:44}},"92":{start:{line:216,column:6},end:{line:233,column:9}},"93":{start:{line:217,column:8},end:{line:232,column:14}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:77},end:{line:56,column:5}},line:18},"1":{name:"(anonymous_1)",decl:{start:{line:63,column:4},end:{line:63,column:5}},loc:{start:{line:63,column:17},end:{line:76,column:7}},line:63},"2":{name:"(anonymous_2)",decl:{start:{line:83,column:4},end:{line:83,column:5}},loc:{start:{line:83,column:33},end:{line:92,column:5}},line:83},"3":{name:"(anonymous_3)",decl:{start:{line:94,column:4},end:{line:94,column:5}},loc:{start:{line:94,column:41},end:{line:105,column:3}},line:94},"4":{name:"(anonymous_4)",decl:{start:{line:115,column:4},end:{line:115,column:5}},loc:{start:{line:115,column:87},end:{line:133,column:7}},line:115},"5":{name:"(anonymous_5)",decl:{start:{line:118,column:39},end:{line:118,column:40}},loc:{start:{line:118,column:54},end:{line:132,column:9}},line:118},"6":{name:"(anonymous_6)",decl:{start:{line:138,column:4},end:{line:138,column:5}},loc:{start:{line:138,column:94},end:{line:158,column:5}},line:138},"7":{name:"(anonymous_7)",decl:{start:{line:141,column:37},end:{line:141,column:38}},loc:{start:{line:141,column:52},end:{line:157,column:7}},line:141},"8":{name:"(anonymous_8)",decl:{start:{line:161,column:2},end:{line:161,column:3}},loc:{start:{line:161,column:31},end:{line:176,column:7}},line:161},"9":{name:"(anonymous_9)",decl:{start:{line:180,column:2},end:{line:180,column:3}},loc:{start:{line:180,column:52},end:{line:197,column:3}},line:180},"10":{name:"(anonymous_10)",decl:{start:{line:200,column:4},end:{line:200,column:5}},loc:{start:{line:200,column:76},end:{line:234,column:5}},line:200},"11":{name:"(anonymous_11)",decl:{start:{line:216,column:35},end:{line:216,column:36}},loc:{start:{line:216,column:50},end:{line:233,column:7}},line:216}},branchMap:{"0":{loc:{start:{line:19,column:8},end:{line:21,column:9}},type:"if",locations:[{start:{line:19,column:8},end:{line:21,column:9}},{start:{line:19,column:8},end:{line:21,column:9}}],line:19},"1":{loc:{start:{line:19,column:12},end:{line:19,column:57}},type:"binary-expr",locations:[{start:{line:19,column:13},end:{line:19,column:22}},{start:{line:19,column:28},end:{line:19,column:56}}],line:19},"2":{loc:{start:{line:22,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:22,column:8},end:{line:24,column:9}},{start:{line:22,column:8},end:{line:24,column:9}}],line:22},"3":{loc:{start:{line:22,column:12},end:{line:22,column:57}},type:"binary-expr",locations:[{start:{line:22,column:13},end:{line:22,column:22}},{start:{line:22,column:28},end:{line:22,column:56}}],line:22},"4":{loc:{start:{line:25,column:8},end:{line:27,column:9}},type:"if",locations:[{start:{line:25,column:8},end:{line:27,column:9}},{start:{line:25,column:8},end:{line:27,column:9}}],line:25},"5":{loc:{start:{line:25,column:12},end:{line:25,column:51}},type:"binary-expr",locations:[{start:{line:25,column:13},end:{line:25,column:19}},{start:{line:25,column:25},end:{line:25,column:50}}],line:25},"6":{loc:{start:{line:28,column:8},end:{line:30,column:9}},type:"if",locations:[{start:{line:28,column:8},end:{line:30,column:9}},{start:{line:28,column:8},end:{line:30,column:9}}],line:28},"7":{loc:{start:{line:28,column:12},end:{line:28,column:59}},type:"binary-expr",locations:[{start:{line:28,column:13},end:{line:28,column:23}},{start:{line:28,column:29},end:{line:28,column:58}}],line:28},"8":{loc:{start:{line:31,column:8},end:{line:33,column:9}},type:"if",locations:[{start:{line:31,column:8},end:{line:33,column:9}},{start:{line:31,column:8},end:{line:33,column:9}}],line:31},"9":{loc:{start:{line:31,column:12},end:{line:31,column:57}},type:"binary-expr",locations:[{start:{line:31,column:13},end:{line:31,column:22}},{start:{line:31,column:28},end:{line:31,column:56}}],line:31},"10":{loc:{start:{line:34,column:8},end:{line:36,column:9}},type:"if",locations:[{start:{line:34,column:8},end:{line:36,column:9}},{start:{line:34,column:8},end:{line:36,column:9}}],line:34},"11":{loc:{start:{line:34,column:12},end:{line:34,column:63}},type:"binary-expr",locations:[{start:{line:34,column:13},end:{line:34,column:25}},{start:{line:34,column:31},end:{line:34,column:62}}],line:34},"12":{loc:{start:{line:51,column:8},end:{line:53,column:9}},type:"if",locations:[{start:{line:51,column:8},end:{line:53,column:9}},{start:{line:51,column:8},end:{line:53,column:9}}],line:51},"13":{loc:{start:{line:64,column:12},end:{line:64,column:92}},type:"if",locations:[{start:{line:64,column:12},end:{line:64,column:92}},{start:{line:64,column:12},end:{line:64,column:92}}],line:64},"14":{loc:{start:{line:64,column:16},end:{line:64,column:45}},type:"binary-expr",locations:[{start:{line:64,column:16},end:{line:64,column:19}},{start:{line:64,column:23},end:{line:64,column:45}}],line:64},"15":{loc:{start:{line:73,column:12},end:{line:73,column:60}},type:"if",locations:[{start:{line:73,column:12},end:{line:73,column:60}},{start:{line:73,column:12},end:{line:73,column:60}}],line:73},"16":{loc:{start:{line:84,column:8},end:{line:87,column:9}},type:"if",locations:[{start:{line:84,column:8},end:{line:87,column:9}},{start:{line:84,column:8},end:{line:87,column:9}}],line:84},"17":{loc:{start:{line:95,column:6},end:{line:98,column:7}},type:"if",locations:[{start:{line:95,column:6},end:{line:98,column:7}},{start:{line:95,column:6},end:{line:98,column:7}}],line:95},"18":{loc:{start:{line:162,column:6},end:{line:162,column:60}},type:"if",locations:[{start:{line:162,column:6},end:{line:162,column:60}},{start:{line:162,column:6},end:{line:162,column:60}}],line:162},"19":{loc:{start:{line:163,column:6},end:{line:163,column:43}},type:"if",locations:[{start:{line:163,column:6},end:{line:163,column:43}},{start:{line:163,column:6},end:{line:163,column:43}}],line:163},"20":{loc:{start:{line:172,column:6},end:{line:174,column:7}},type:"if",locations:[{start:{line:172,column:6},end:{line:174,column:7}},{start:{line:172,column:6},end:{line:174,column:7}}],line:172},"21":{loc:{start:{line:181,column:4},end:{line:181,column:34}},type:"if",locations:[{start:{line:181,column:4},end:{line:181,column:34}},{start:{line:181,column:4},end:{line:181,column:34}}],line:181},"22":{loc:{start:{line:182,column:4},end:{line:182,column:39}},type:"if",locations:[{start:{line:182,column:4},end:{line:182,column:39}},{start:{line:182,column:4},end:{line:182,column:39}}],line:182},"23":{loc:{start:{line:193,column:4},end:{line:195,column:3}},type:"if",locations:[{start:{line:193,column:4},end:{line:195,column:3}},{start:{line:193,column:4},end:{line:195,column:3}}],line:193}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"5e26ed920631624fae01b3e0b39470fdf7a08b8b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/*
This is the file that includes all of the functions that can manipulate users collection.
*/const mongoCollections=(cov_1vg3x44zeq.s[0]++,require("./collection"));const users=(cov_1vg3x44zeq.s[1]++,mongoCollections.users);const bcrypt=(cov_1vg3x44zeq.s[2]++,require("bcrypt"));const{ObjectId}=(cov_1vg3x44zeq.s[3]++,require('mongodb'));const children=(cov_1vg3x44zeq.s[4]++,mongoCollections.children);const geofences=(cov_1vg3x44zeq.s[5]++,mongoCollections.geofences);cov_1vg3x44zeq.s[6]++;module.exports={/**
     * stores the signup information into a mongoDB
     * @param {*} username username they set 
     * @param {*} email validated email
     * @param {*} password password they set, 
     */async signup(username,email,password,firstName,lastName,phoneNumber){cov_1vg3x44zeq.f[0]++;cov_1vg3x44zeq.s[7]++;if((cov_1vg3x44zeq.b[1][0]++,!username)||(cov_1vg3x44zeq.b[1][1]++,typeof username!=="string")){cov_1vg3x44zeq.b[0][0]++;cov_1vg3x44zeq.s[8]++;throw`Error: ${username} is invalid`;}else{cov_1vg3x44zeq.b[0][1]++;}cov_1vg3x44zeq.s[9]++;if((cov_1vg3x44zeq.b[3][0]++,!password)||(cov_1vg3x44zeq.b[3][1]++,typeof password!=="string")){cov_1vg3x44zeq.b[2][0]++;cov_1vg3x44zeq.s[10]++;throw`Error: ${password} is invalid`;}else{cov_1vg3x44zeq.b[2][1]++;}cov_1vg3x44zeq.s[11]++;if((cov_1vg3x44zeq.b[5][0]++,!email)||(cov_1vg3x44zeq.b[5][1]++,typeof email!=="string")){cov_1vg3x44zeq.b[4][0]++;cov_1vg3x44zeq.s[12]++;throw`Error: ${email}is invalid`;}else{cov_1vg3x44zeq.b[4][1]++;}cov_1vg3x44zeq.s[13]++;if((cov_1vg3x44zeq.b[7][0]++,!firstName)||(cov_1vg3x44zeq.b[7][1]++,typeof firstName!=="string")){cov_1vg3x44zeq.b[6][0]++;cov_1vg3x44zeq.s[14]++;throw`Error: ${firstName} is invalid`;}else{cov_1vg3x44zeq.b[6][1]++;}cov_1vg3x44zeq.s[15]++;if((cov_1vg3x44zeq.b[9][0]++,!lastName)||(cov_1vg3x44zeq.b[9][1]++,typeof lastName!=="string")){cov_1vg3x44zeq.b[8][0]++;cov_1vg3x44zeq.s[16]++;throw`Error: ${lastName} is invalid`;}else{cov_1vg3x44zeq.b[8][1]++;}cov_1vg3x44zeq.s[17]++;if((cov_1vg3x44zeq.b[11][0]++,!phoneNumber)||(cov_1vg3x44zeq.b[11][1]++,typeof phoneNumber!=="string")){cov_1vg3x44zeq.b[10][0]++;cov_1vg3x44zeq.s[18]++;throw`Error: ${phoneNumber} is invalid`;}else{cov_1vg3x44zeq.b[10][1]++;}const person=(cov_1vg3x44zeq.s[19]++,await users());let newPerson=(cov_1vg3x44zeq.s[20]++,{username,email,//this will bcrypt the password so it is harder to decrypt
password:bcrypt.hashSync(password,1),firstName,lastName,phoneNumber,fcmToken:'',children:[],geofences:[]});const insert=(cov_1vg3x44zeq.s[21]++,await person.insertOne(newPerson));cov_1vg3x44zeq.s[22]++;if(insert.insertedCount===0){cov_1vg3x44zeq.b[12][0]++;cov_1vg3x44zeq.s[23]++;throw"Could not add person";}else{cov_1vg3x44zeq.b[12][1]++;}const newId=(cov_1vg3x44zeq.s[24]++,insert.insertedId);cov_1vg3x44zeq.s[25]++;return await this.get(newId);},/**
     * get the person who signed up from the database
     * @param {string} id
     * @returns the person from the database
     */async get(id){cov_1vg3x44zeq.f[1]++;cov_1vg3x44zeq.s[26]++;if((cov_1vg3x44zeq.b[14][0]++,!id)&&(cov_1vg3x44zeq.b[14][1]++,typeof id!=="string")){cov_1vg3x44zeq.b[13][0]++;cov_1vg3x44zeq.s[27]++;throw"You must provide an id to search for";}else{cov_1vg3x44zeq.b[13][1]++;}cov_1vg3x44zeq.s[28]++;try{cov_1vg3x44zeq.s[29]++;parseID=ObjectId(id);}catch(e){cov_1vg3x44zeq.s[30]++;throw"Not Object ID";}const userCollection=(cov_1vg3x44zeq.s[31]++,await users());const user=(cov_1vg3x44zeq.s[32]++,await userCollection.findOne(parseID));cov_1vg3x44zeq.s[33]++;if(user===null){cov_1vg3x44zeq.b[15][0]++;cov_1vg3x44zeq.s[34]++;throw"No user with that id";}else{cov_1vg3x44zeq.b[15][1]++;}cov_1vg3x44zeq.s[35]++;return user;},/**
     * finds user by its username
     * @param {string} userName 
     * @returns found user from database
     */async getUserbyname(userName){cov_1vg3x44zeq.f[2]++;cov_1vg3x44zeq.s[36]++;if(!userName){cov_1vg3x44zeq.b[16][0]++;cov_1vg3x44zeq.s[37]++;throw"User name not provided";}else{cov_1vg3x44zeq.b[16][1]++;}const person=(cov_1vg3x44zeq.s[38]++,await users());const findPerson=(cov_1vg3x44zeq.s[39]++,await person.findOne({username:userName}));cov_1vg3x44zeq.s[40]++;return findPerson;},async getUserbyfirstName(personEmail){cov_1vg3x44zeq.f[3]++;cov_1vg3x44zeq.s[41]++;if(!personEmail){cov_1vg3x44zeq.b[17][0]++;cov_1vg3x44zeq.s[42]++;throw"Email not provided";}else{cov_1vg3x44zeq.b[17][1]++;}const person=(cov_1vg3x44zeq.s[43]++,await users());const foundPerson=(cov_1vg3x44zeq.s[44]++,await person.findOne({email:personEmail},{projection:{_id:1}}));const foundPersonId=(cov_1vg3x44zeq.s[45]++,foundPerson._id);cov_1vg3x44zeq.s[46]++;stringedFoundPersonId=foundPersonId.toString();cov_1vg3x44zeq.s[47]++;return stringedFoundPersonId;},/**
     * adds child to user's children array
     * @param {objectId} id 
     * @param {objectId} childId 
     * @param {string} childFirstName 
     * @param {string} childLastName 
     * @param {string} childPhoneNumber 
     */async addChildToUser(id,childId,childFirstName,childLastName,childPhoneNumber){cov_1vg3x44zeq.f[4]++;let parsedId=(cov_1vg3x44zeq.s[48]++,ObjectId(id));const usersCollection=(cov_1vg3x44zeq.s[49]++,await users());cov_1vg3x44zeq.s[50]++;return this.get(parsedId).then(currentUser=>{cov_1vg3x44zeq.f[5]++;cov_1vg3x44zeq.s[51]++;return usersCollection.updateOne({_id:parsedId},{$addToSet:{children:{id:childId,childFirstName:childFirstName,childLastName:childLastName,childPhoneNumber:childPhoneNumber}}});});},/**
       * adds geofence to user's geofences array
       */async addGeofenceToUser(id,geofenceId,geofenceName,formattedAddress,lat,lng,radius){cov_1vg3x44zeq.f[6]++;let parsedId=(cov_1vg3x44zeq.s[52]++,ObjectId(id));const usersCollection=(cov_1vg3x44zeq.s[53]++,await users());cov_1vg3x44zeq.s[54]++;return this.get(parsedId).then(currentUser=>{cov_1vg3x44zeq.f[7]++;cov_1vg3x44zeq.s[55]++;return usersCollection.updateOne({_id:parsedId},{$addToSet:{geofences:{geofenceId:geofenceId,geofenceName:geofenceName,formattedAddress:formattedAddress,lat:lat,lng:lng,radius:parseInt(radius)}}});});},//Updates user's children array in database
async updateUser(id,childId){cov_1vg3x44zeq.f[8]++;cov_1vg3x44zeq.s[56]++;if(!id){cov_1vg3x44zeq.b[18][0]++;cov_1vg3x44zeq.s[57]++;throw"You must provide an id to search for";}else{cov_1vg3x44zeq.b[18][1]++;}cov_1vg3x44zeq.s[58]++;if(!childId){cov_1vg3x44zeq.b[19][0]++;cov_1vg3x44zeq.s[59]++;throw"Invalid Input.";}else{cov_1vg3x44zeq.b[19][1]++;}cov_1vg3x44zeq.s[60]++;await this.get(id);const userCollection=(cov_1vg3x44zeq.s[61]++,await users());const updatedUser=(cov_1vg3x44zeq.s[62]++,{children:childId});const updatedInfo=(cov_1vg3x44zeq.s[63]++,await userCollection.updateOne({_id:id},{$set:updatedUser}));cov_1vg3x44zeq.s[64]++;if(updatedInfo.modifiedCount===0){cov_1vg3x44zeq.b[20][0]++;cov_1vg3x44zeq.s[65]++;throw"could not update successfully";}else{cov_1vg3x44zeq.b[20][1]++;}cov_1vg3x44zeq.s[66]++;return await this.get(id);},//updating an existing parent fcmToken
async updateParentFCMToken(parent_id,parentToken){cov_1vg3x44zeq.f[9]++;cov_1vg3x44zeq.s[67]++;if(!parent_id){cov_1vg3x44zeq.b[21][0]++;cov_1vg3x44zeq.s[68]++;throw"NO ID";}else{cov_1vg3x44zeq.b[21][1]++;}cov_1vg3x44zeq.s[69]++;if(!parentToken){cov_1vg3x44zeq.b[22][0]++;cov_1vg3x44zeq.s[70]++;throw"NO TOKEN";}else{cov_1vg3x44zeq.b[22][1]++;}const parsedId=(cov_1vg3x44zeq.s[71]++,ObjectId(parent_id));const found_parent=(cov_1vg3x44zeq.s[72]++,await this.get(parsedId));const found_id=(cov_1vg3x44zeq.s[73]++,found_parent._id);const usersCollection=(cov_1vg3x44zeq.s[74]++,await users());const updatedUser=(cov_1vg3x44zeq.s[75]++,{fcmToken:parentToken});const updatedInfo=(cov_1vg3x44zeq.s[76]++,await usersCollection.updateOne({_id:found_id},{$set:updatedUser}));cov_1vg3x44zeq.s[77]++;if(updatedInfo.modifiedCount===0){cov_1vg3x44zeq.b[23][0]++;cov_1vg3x44zeq.s[78]++;throw"could not update successfully";}else{cov_1vg3x44zeq.b[23][1]++;}cov_1vg3x44zeq.s[79]++;return await this.get(parsedId);},//add geofences to children array
async addGeofenceToChildArray(userId,geofencesName,childsPhoneNumber){cov_1vg3x44zeq.f[10]++;cov_1vg3x44zeq.s[80]++;childCollection=await children();cov_1vg3x44zeq.s[81]++;childFound=await childCollection.findOne({childPhoneNumber:childsPhoneNumber},{projection:{_id:1}});let childId=(cov_1vg3x44zeq.s[82]++,childFound._id);cov_1vg3x44zeq.s[83]++;geofenceCollection=await geofences();cov_1vg3x44zeq.s[84]++;geofenceFound=await geofenceCollection.findOne({geofenceName:geofencesName});let geofencesId=(cov_1vg3x44zeq.s[85]++,geofenceFound._id);cov_1vg3x44zeq.s[86]++;usersCollection=await users();let geofencingName=(cov_1vg3x44zeq.s[87]++,geofenceFound.geofenceName);let geofenceAddress=(cov_1vg3x44zeq.s[88]++,geofenceFound.formattedAddress);let foundLat=(cov_1vg3x44zeq.s[89]++,geofenceFound.lat);let foundLng=(cov_1vg3x44zeq.s[90]++,geofenceFound.lng);let foundRadius=(cov_1vg3x44zeq.s[91]++,geofenceFound.radius);cov_1vg3x44zeq.s[92]++;return this.get(userId).then(currentUser=>{cov_1vg3x44zeq.f[11]++;cov_1vg3x44zeq.s[93]++;return usersCollection.updateOne({'children.id':childId},{$push:{'children.$.registeredGeofences':{geofenceId:geofencesId,geofenceName:geofencingName,formattedAddress:geofenceAddress,lat:foundLat,lng:foundLng,radius:parseInt(foundRadius),CreatedAt:new Date()}}});});}};