var cov_1dy5x1dos0=function(){var path="/Users/katya/Documents/GitHub/geofencing/routes/geofence.js";var hash="441472ddb3121fa37323be1e4d91ca0935543fa3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/katya/Documents/GitHub/geofencing/routes/geofence.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:21},end:{line:2,column:39}},"2":{start:{line:3,column:15},end:{line:3,column:31}},"3":{start:{line:4,column:13},end:{line:4,column:31}},"4":{start:{line:5,column:14},end:{line:5,column:28}},"5":{start:{line:6,column:18},end:{line:6,column:32}},"6":{start:{line:9,column:0},end:{line:41,column:3}},"7":{start:{line:11,column:4},end:{line:38,column:5}},"8":{start:{line:13,column:21},end:{line:13,column:39}},"9":{start:{line:14,column:25},end:{line:14,column:48}},"10":{start:{line:15,column:8},end:{line:17,column:9}},"11":{start:{line:16,column:12},end:{line:16,column:33}},"12":{start:{line:18,column:26},end:{line:18,column:64}},"13":{start:{line:25,column:8},end:{line:25,column:47}},"14":{start:{line:31,column:8},end:{line:35,column:10}},"15":{start:{line:37,column:8},end:{line:37,column:14}},"16":{start:{line:40,column:4},end:{line:40,column:130}},"17":{start:{line:64,column:2},end:{line:64,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:16},end:{line:9,column:17}},loc:{start:{line:9,column:36},end:{line:41,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:11,column:4},end:{line:38,column:5}},type:"if",locations:[{start:{line:11,column:4},end:{line:38,column:5}},{start:{line:11,column:4},end:{line:38,column:5}}],line:11},"1":{loc:{start:{line:15,column:8},end:{line:17,column:9}},type:"if",locations:[{start:{line:15,column:8},end:{line:17,column:9}},{start:{line:15,column:8},end:{line:17,column:9}}],line:15}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"441472ddb3121fa37323be1e4d91ca0935543fa3"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const express=(cov_1dy5x1dos0.s[0]++,require("express"));const{ObjectId}=(cov_1dy5x1dos0.s[1]++,require('mongodb'));const router=(cov_1dy5x1dos0.s[2]++,express.Router());const data=(cov_1dy5x1dos0.s[3]++,require("../data"));const users=(cov_1dy5x1dos0.s[4]++,data.usersData);const geofences=(cov_1dy5x1dos0.s[5]++,data.geofences);cov_1dy5x1dos0.s[6]++;router.get("/",async(req,res)=>{cov_1dy5x1dos0.f[0]++;cov_1dy5x1dos0.s[7]++;//check if user logged in. If not, show 401 error otherwise render /geofence page
if(req.session.authority==true){cov_1dy5x1dos0.b[0][0]++;var userID=(cov_1dy5x1dos0.s[8]++,req.session.userID);var userResult=(cov_1dy5x1dos0.s[9]++,await users.get(userID));cov_1dy5x1dos0.s[10]++;if(userResult==null){cov_1dy5x1dos0.b[1][0]++;cov_1dy5x1dos0.s[11]++;userResult=["None"];}else{cov_1dy5x1dos0.b[1][1]++;}var myGeofences=(cov_1dy5x1dos0.s[12]++,await geofences.getMyGeofences(userID));//List of geofences for a given user
// var myFences = [];
// console.log(myGeofences)
// var i;
// for (i = 0; i < myGeofences.length; i++) {
//     myFences.push(myGeofences[i].geofenceName);
cov_1dy5x1dos0.s[13]++;console.log('myGeofences',myGeofences);// var i;
// for (i = 0; i < myGeofences.length; i++) {
//   var f = myGeofences[i]._id;    
// }
// var fence = await geofences.getGeofence(f)
cov_1dy5x1dos0.s[14]++;res.status(200).render("geofence",{userResult:userResult,myGeofences:myGeofences});cov_1dy5x1dos0.s[15]++;return;}else{cov_1dy5x1dos0.b[0][1]++;}cov_1dy5x1dos0.s[16]++;res.status(401).render('errorPage',{e:{statusCode:"401",error:"You are not logged in, please login",redirect:"/"}});});//outputs specific parent's information in json format
// router.post("/:id", async (req, res) => {
//   try {
//     const geofence = await geofences.get(req.params.id);
//     res.json(geofence);
//   } catch (e) {
//     res.status(404).json({ error: "Geofence not found" });
//   }
// });
/*
  This is where we need to list all of the existing Geofences
  */cov_1dy5x1dos0.s[17]++;module.exports=router;