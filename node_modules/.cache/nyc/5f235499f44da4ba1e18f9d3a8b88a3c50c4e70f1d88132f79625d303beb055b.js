var cov_1fipa09eqy=function(){var path="/Users/katya/Documents/GitHub/geofencing/data/children.js";var hash="2c7bba34a9fc5e5fa9da96888acd621cd9b4abc2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/katya/Documents/GitHub/geofencing/data/children.js",statementMap:{"0":{start:{line:4,column:25},end:{line:4,column:48}},"1":{start:{line:5,column:18},end:{line:5,column:43}},"2":{start:{line:6,column:14},end:{line:6,column:36}},"3":{start:{line:7,column:18},end:{line:7,column:44}},"4":{start:{line:8,column:21},end:{line:8,column:39}},"5":{start:{line:11,column:0},end:{line:235,column:1}},"6":{start:{line:14,column:8},end:{line:16,column:9}},"7":{start:{line:15,column:12},end:{line:15,column:48}},"8":{start:{line:17,column:8},end:{line:19,column:9}},"9":{start:{line:18,column:12},end:{line:18,column:48}},"10":{start:{line:20,column:8},end:{line:22,column:9}},"11":{start:{line:21,column:12},end:{line:21,column:47}},"12":{start:{line:23,column:8},end:{line:25,column:9}},"13":{start:{line:24,column:12},end:{line:24,column:58}},"14":{start:{line:27,column:22},end:{line:27,column:38}},"15":{start:{line:28,column:23},end:{line:35,column:9}},"16":{start:{line:36,column:23},end:{line:36,column:54}},"17":{start:{line:37,column:8},end:{line:39,column:9}},"18":{start:{line:38,column:12},end:{line:38,column:40}},"19":{start:{line:40,column:22},end:{line:40,column:39}},"20":{start:{line:41,column:8},end:{line:41,column:37}},"21":{start:{line:46,column:8},end:{line:48,column:9}},"22":{start:{line:47,column:12},end:{line:47,column:46}},"23":{start:{line:49,column:23},end:{line:49,column:36}},"24":{start:{line:50,column:22},end:{line:50,column:38}},"25":{start:{line:51,column:27},end:{line:51,column:76}},"26":{start:{line:52,column:8},end:{line:52,column:26}},"27":{start:{line:60,column:8},end:{line:60,column:88}},"28":{start:{line:60,column:43},end:{line:60,column:88}},"29":{start:{line:61,column:12},end:{line:65,column:13}},"30":{start:{line:62,column:15},end:{line:62,column:37}},"31":{start:{line:64,column:14},end:{line:64,column:35}},"32":{start:{line:66,column:39},end:{line:66,column:55}},"33":{start:{line:68,column:26},end:{line:68,column:67}},"34":{start:{line:69,column:12},end:{line:69,column:61}},"35":{start:{line:69,column:32},end:{line:69,column:61}},"36":{start:{line:71,column:8},end:{line:71,column:21}},"37":{start:{line:79,column:8},end:{line:82,column:9}},"38":{start:{line:81,column:12},end:{line:81,column:45}},"39":{start:{line:83,column:22},end:{line:83,column:38}},"40":{start:{line:84,column:27},end:{line:84,column:83}},"41":{start:{line:85,column:8},end:{line:85,column:26}},"42":{start:{line:95,column:8},end:{line:95,column:42}},"43":{start:{line:96,column:8},end:{line:96,column:116}},"44":{start:{line:97,column:22},end:{line:97,column:36}},"45":{start:{line:98,column:8},end:{line:98,column:46}},"46":{start:{line:99,column:8},end:{line:99,column:87}},"47":{start:{line:100,column:26},end:{line:100,column:43}},"48":{start:{line:101,column:29},end:{line:101,column:55}},"49":{start:{line:102,column:30},end:{line:102,column:60}},"50":{start:{line:103,column:23},end:{line:103,column:40}},"51":{start:{line:104,column:23},end:{line:104,column:40}},"52":{start:{line:105,column:26},end:{line:105,column:46}},"53":{start:{line:108,column:8},end:{line:125,column:11}},"54":{start:{line:109,column:10},end:{line:124,column:12}},"55":{start:{line:131,column:8},end:{line:131,column:45}},"56":{start:{line:131,column:22},end:{line:131,column:45}},"57":{start:{line:132,column:8},end:{line:132,column:62}},"58":{start:{line:132,column:27},end:{line:132,column:62}},"59":{start:{line:133,column:8},end:{line:133,column:63}},"60":{start:{line:133,column:27},end:{line:133,column:63}},"61":{start:{line:135,column:8},end:{line:135,column:31}},"62":{start:{line:136,column:35},end:{line:136,column:51}},"63":{start:{line:137,column:29},end:{line:141,column:9}},"64":{start:{line:143,column:28},end:{line:143,column:101}},"65":{start:{line:145,column:8},end:{line:147,column:9}},"66":{start:{line:146,column:12},end:{line:146,column:50}},"67":{start:{line:148,column:8},end:{line:148,column:39}},"68":{start:{line:153,column:8},end:{line:153,column:37}},"69":{start:{line:153,column:23},end:{line:153,column:37}},"70":{start:{line:154,column:8},end:{line:154,column:42}},"71":{start:{line:154,column:25},end:{line:154,column:42}},"72":{start:{line:155,column:25},end:{line:155,column:43}},"73":{start:{line:156,column:28},end:{line:156,column:52}},"74":{start:{line:157,column:25},end:{line:157,column:40}},"75":{start:{line:159,column:35},end:{line:159,column:51}},"76":{start:{line:160,column:28},end:{line:162,column:9}},"77":{start:{line:164,column:28},end:{line:164,column:99}},"78":{start:{line:165,column:8},end:{line:167,column:5}},"79":{start:{line:166,column:8},end:{line:166,column:46}},"80":{start:{line:168,column:8},end:{line:168,column:40}},"81":{start:{line:173,column:8},end:{line:173,column:42}},"82":{start:{line:174,column:30},end:{line:174,column:48}},"83":{start:{line:175,column:8},end:{line:175,column:99}},"84":{start:{line:176,column:22},end:{line:176,column:36}},"85":{start:{line:177,column:8},end:{line:177,column:46}},"86":{start:{line:178,column:33},end:{line:178,column:54}},"87":{start:{line:179,column:8},end:{line:179,column:81}},"88":{start:{line:180,column:26},end:{line:180,column:43}},"89":{start:{line:181,column:29},end:{line:181,column:55}},"90":{start:{line:182,column:8},end:{line:182,column:28}},"91":{start:{line:183,column:8},end:{line:203,column:3}},"92":{start:{line:184,column:8},end:{line:202,column:7}},"93":{start:{line:207,column:8},end:{line:207,column:45}},"94":{start:{line:216,column:37},end:{line:226,column:27}},"95":{start:{line:227,column:23},end:{line:227,column:90}},"96":{start:{line:227,column:65},end:{line:227,column:87}},"97":{start:{line:228,column:8},end:{line:228,column:29}},"98":{start:{line:229,column:31},end:{line:229,column:79}},"99":{start:{line:232,column:8},end:{line:232,column:31}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:61},end:{line:42,column:5}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:44,column:4},end:{line:44,column:5}},loc:{start:{line:44,column:27},end:{line:53,column:5}},line:44},"2":{name:"(anonymous_2)",decl:{start:{line:59,column:4},end:{line:59,column:5}},loc:{start:{line:59,column:17},end:{line:72,column:5}},line:59},"3":{name:"(anonymous_3)",decl:{start:{line:78,column:4},end:{line:78,column:5}},loc:{start:{line:78,column:49},end:{line:86,column:5}},line:78},"4":{name:"(anonymous_4)",decl:{start:{line:94,column:4},end:{line:94,column:5}},loc:{start:{line:94,column:63},end:{line:126,column:7}},line:94},"5":{name:"(anonymous_5)",decl:{start:{line:108,column:38},end:{line:108,column:39}},loc:{start:{line:108,column:53},end:{line:125,column:9}},line:108},"6":{name:"(anonymous_6)",decl:{start:{line:130,column:4},end:{line:130,column:5}},loc:{start:{line:130,column:58},end:{line:149,column:9}},line:130},"7":{name:"(anonymous_7)",decl:{start:{line:152,column:4},end:{line:152,column:5}},loc:{start:{line:152,column:51},end:{line:169,column:5}},line:152},"8":{name:"(anonymous_8)",decl:{start:{line:171,column:4},end:{line:171,column:5}},loc:{start:{line:171,column:128},end:{line:204,column:1}},line:171},"9":{name:"(anonymous_9)",decl:{start:{line:183,column:38},end:{line:183,column:39}},loc:{start:{line:183,column:53},end:{line:203,column:1}},line:183},"10":{name:"(anonymous_10)",decl:{start:{line:206,column:4},end:{line:206,column:5}},loc:{start:{line:206,column:51},end:{line:234,column:5}},line:206},"11":{name:"(anonymous_11)",decl:{start:{line:227,column:48},end:{line:227,column:49}},loc:{start:{line:227,column:63},end:{line:227,column:89}},line:227}},branchMap:{"0":{loc:{start:{line:14,column:8},end:{line:16,column:9}},type:"if",locations:[{start:{line:14,column:8},end:{line:16,column:9}},{start:{line:14,column:8},end:{line:16,column:9}}],line:14},"1":{loc:{start:{line:14,column:12},end:{line:14,column:57}},type:"binary-expr",locations:[{start:{line:14,column:13},end:{line:14,column:22}},{start:{line:14,column:28},end:{line:14,column:56}}],line:14},"2":{loc:{start:{line:17,column:8},end:{line:19,column:9}},type:"if",locations:[{start:{line:17,column:8},end:{line:19,column:9}},{start:{line:17,column:8},end:{line:19,column:9}}],line:17},"3":{loc:{start:{line:17,column:12},end:{line:17,column:53}},type:"binary-expr",locations:[{start:{line:17,column:13},end:{line:17,column:20}},{start:{line:17,column:26},end:{line:17,column:52}}],line:17},"4":{loc:{start:{line:20,column:8},end:{line:22,column:9}},type:"if",locations:[{start:{line:20,column:8},end:{line:22,column:9}},{start:{line:20,column:8},end:{line:22,column:9}}],line:20},"5":{loc:{start:{line:20,column:12},end:{line:20,column:51}},type:"binary-expr",locations:[{start:{line:20,column:13},end:{line:20,column:19}},{start:{line:20,column:25},end:{line:20,column:50}}],line:20},"6":{loc:{start:{line:23,column:8},end:{line:25,column:9}},type:"if",locations:[{start:{line:23,column:8},end:{line:25,column:9}},{start:{line:23,column:8},end:{line:25,column:9}}],line:23},"7":{loc:{start:{line:23,column:12},end:{line:23,column:73}},type:"binary-expr",locations:[{start:{line:23,column:13},end:{line:23,column:30}},{start:{line:23,column:36},end:{line:23,column:72}}],line:23},"8":{loc:{start:{line:37,column:8},end:{line:39,column:9}},type:"if",locations:[{start:{line:37,column:8},end:{line:39,column:9}},{start:{line:37,column:8},end:{line:39,column:9}}],line:37},"9":{loc:{start:{line:46,column:8},end:{line:48,column:9}},type:"if",locations:[{start:{line:46,column:8},end:{line:48,column:9}},{start:{line:46,column:8},end:{line:48,column:9}}],line:46},"10":{loc:{start:{line:60,column:8},end:{line:60,column:88}},type:"if",locations:[{start:{line:60,column:8},end:{line:60,column:88}},{start:{line:60,column:8},end:{line:60,column:88}}],line:60},"11":{loc:{start:{line:60,column:12},end:{line:60,column:41}},type:"binary-expr",locations:[{start:{line:60,column:12},end:{line:60,column:15}},{start:{line:60,column:19},end:{line:60,column:41}}],line:60},"12":{loc:{start:{line:69,column:12},end:{line:69,column:61}},type:"if",locations:[{start:{line:69,column:12},end:{line:69,column:61}},{start:{line:69,column:12},end:{line:69,column:61}}],line:69},"13":{loc:{start:{line:79,column:8},end:{line:82,column:9}},type:"if",locations:[{start:{line:79,column:8},end:{line:82,column:9}},{start:{line:79,column:8},end:{line:82,column:9}}],line:79},"14":{loc:{start:{line:131,column:8},end:{line:131,column:45}},type:"if",locations:[{start:{line:131,column:8},end:{line:131,column:45}},{start:{line:131,column:8},end:{line:131,column:45}}],line:131},"15":{loc:{start:{line:132,column:8},end:{line:132,column:62}},type:"if",locations:[{start:{line:132,column:8},end:{line:132,column:62}},{start:{line:132,column:8},end:{line:132,column:62}}],line:132},"16":{loc:{start:{line:133,column:8},end:{line:133,column:63}},type:"if",locations:[{start:{line:133,column:8},end:{line:133,column:63}},{start:{line:133,column:8},end:{line:133,column:63}}],line:133},"17":{loc:{start:{line:145,column:8},end:{line:147,column:9}},type:"if",locations:[{start:{line:145,column:8},end:{line:147,column:9}},{start:{line:145,column:8},end:{line:147,column:9}}],line:145},"18":{loc:{start:{line:153,column:8},end:{line:153,column:37}},type:"if",locations:[{start:{line:153,column:8},end:{line:153,column:37}},{start:{line:153,column:8},end:{line:153,column:37}}],line:153},"19":{loc:{start:{line:154,column:8},end:{line:154,column:42}},type:"if",locations:[{start:{line:154,column:8},end:{line:154,column:42}},{start:{line:154,column:8},end:{line:154,column:42}}],line:154},"20":{loc:{start:{line:165,column:8},end:{line:167,column:5}},type:"if",locations:[{start:{line:165,column:8},end:{line:167,column:5}},{start:{line:165,column:8},end:{line:167,column:5}}],line:165}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"2c7bba34a9fc5e5fa9da96888acd621cd9b4abc2"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/*
This is the file that includes all of the functions that can manipulate children collection.
*/const mongoCollections=(cov_1fipa09eqy.s[0]++,require("./collection"));const children=(cov_1fipa09eqy.s[1]++,mongoCollections.children);const users=(cov_1fipa09eqy.s[2]++,mongoCollections.users);const geofences=(cov_1fipa09eqy.s[3]++,mongoCollections.geofences);const{ObjectId}=(cov_1fipa09eqy.s[4]++,require('mongodb'));cov_1fipa09eqy.s[5]++;module.exports={//Adds a child to children Collection in MongoDB
async addChild(parentId,firstN,lastN,childPhoneNumber){cov_1fipa09eqy.f[0]++;cov_1fipa09eqy.s[6]++;if((cov_1fipa09eqy.b[1][0]++,!parentId)||(cov_1fipa09eqy.b[1][1]++,typeof parentId!=="string")){cov_1fipa09eqy.b[0][0]++;cov_1fipa09eqy.s[7]++;throw`Error: ${userId} is invalid`;}else{cov_1fipa09eqy.b[0][1]++;}cov_1fipa09eqy.s[8]++;if((cov_1fipa09eqy.b[3][0]++,!firstN)||(cov_1fipa09eqy.b[3][1]++,typeof firstN!=="string")){cov_1fipa09eqy.b[2][0]++;cov_1fipa09eqy.s[9]++;throw`Error: ${firstN} is invalid`;}else{cov_1fipa09eqy.b[2][1]++;}cov_1fipa09eqy.s[10]++;if((cov_1fipa09eqy.b[5][0]++,!lastN)||(cov_1fipa09eqy.b[5][1]++,typeof lastN!=="string")){cov_1fipa09eqy.b[4][0]++;cov_1fipa09eqy.s[11]++;throw`Error: ${lastN} is invalid`;}else{cov_1fipa09eqy.b[4][1]++;}cov_1fipa09eqy.s[12]++;if((cov_1fipa09eqy.b[7][0]++,!childPhoneNumber)||(cov_1fipa09eqy.b[7][1]++,typeof childPhoneNumber!=="string")){cov_1fipa09eqy.b[6][0]++;cov_1fipa09eqy.s[13]++;throw'Error: ${childPhoneNumber} is invalid';}else{cov_1fipa09eqy.b[6][1]++;}const child=(cov_1fipa09eqy.s[14]++,await children());let newChild=(cov_1fipa09eqy.s[15]++,{parentId,firstN,lastN,childPhoneNumber,fcmToken:'',geofences:[]});const insert=(cov_1fipa09eqy.s[16]++,await child.insertOne(newChild));cov_1fipa09eqy.s[17]++;if(insert.insertedCount===0){cov_1fipa09eqy.b[8][0]++;cov_1fipa09eqy.s[18]++;throw"Could not add child";}else{cov_1fipa09eqy.b[8][1]++;}const newId=(cov_1fipa09eqy.s[19]++,insert.insertedId);cov_1fipa09eqy.s[20]++;return await this.get(newId);},async getMyChildren(id){cov_1fipa09eqy.f[1]++;cov_1fipa09eqy.s[21]++;//given id, return the user from the database
if(!id){cov_1fipa09eqy.b[9][0]++;cov_1fipa09eqy.s[22]++;throw"Error: no id was provided";}else{cov_1fipa09eqy.b[9][1]++;}var targetID=(cov_1fipa09eqy.s[23]++,id.toString());const child=(cov_1fipa09eqy.s[24]++,await children());const myChildren=(cov_1fipa09eqy.s[25]++,await child.find({parentId:targetID}).toArray());cov_1fipa09eqy.s[26]++;return myChildren;},/**
     * get an already existing child from database by searching with Id
     * @returns the child from the database - object
     */async get(id){cov_1fipa09eqy.f[2]++;cov_1fipa09eqy.s[27]++;if((cov_1fipa09eqy.b[11][0]++,!id)&&(cov_1fipa09eqy.b[11][1]++,typeof id!=="string")){cov_1fipa09eqy.b[10][0]++;cov_1fipa09eqy.s[28]++;throw"You must provide an id to search for";}else{cov_1fipa09eqy.b[10][1]++;}cov_1fipa09eqy.s[29]++;try{cov_1fipa09eqy.s[30]++;parseID=ObjectId(id);}catch(e){cov_1fipa09eqy.s[31]++;throw"Not Object ID";}const childrenCollection=(cov_1fipa09eqy.s[32]++,await children());const child=(cov_1fipa09eqy.s[33]++,await childrenCollection.findOne(parseID));cov_1fipa09eqy.s[34]++;if(child===null){cov_1fipa09eqy.b[12][0]++;cov_1fipa09eqy.s[35]++;throw"No user with that id";}else{cov_1fipa09eqy.b[12][1]++;}cov_1fipa09eqy.s[36]++;return child;},/** 
     * @param {string} childPhoneNumber
     * @returns an object with child's information by searching for the provided phone number
     */async getChildbyPhoneNumber(childPhoneNumber){cov_1fipa09eqy.f[3]++;cov_1fipa09eqy.s[37]++;if(!childPhoneNumber){cov_1fipa09eqy.b[13][0]++;cov_1fipa09eqy.s[38]++;throw"Phone number not provided";}else{cov_1fipa09eqy.b[13][1]++;}const child=(cov_1fipa09eqy.s[39]++,await children());const foundChild=(cov_1fipa09eqy.s[40]++,await child.findOne({childPhoneNumber:childPhoneNumber}));cov_1fipa09eqy.s[41]++;return foundChild;},/**
     * adds geofence to child under geofences array
     * @param {string} geofencesName 
     * @param {string} childsPhoneNumber 
     * @returns an updated child object
     */async addGeofenceToChild(geofencesName,childsPhoneNumber){cov_1fipa09eqy.f[4]++;cov_1fipa09eqy.s[42]++;childCollection=await children();cov_1fipa09eqy.s[43]++;childFound=await childCollection.findOne({childPhoneNumber:childsPhoneNumber},{projection:{_id:1}});let childId=(cov_1fipa09eqy.s[44]++,childFound._id);cov_1fipa09eqy.s[45]++;geofenceCollection=await geofences();cov_1fipa09eqy.s[46]++;geofenceFound=await geofenceCollection.findOne({geofenceName:geofencesName});let geofencesId=(cov_1fipa09eqy.s[47]++,geofenceFound._id);let geofencingName=(cov_1fipa09eqy.s[48]++,geofenceFound.geofenceName);let geofenceAddress=(cov_1fipa09eqy.s[49]++,geofenceFound.formattedAddress);let foundLat=(cov_1fipa09eqy.s[50]++,geofenceFound.lat);let foundLng=(cov_1fipa09eqy.s[51]++,geofenceFound.lng);let foundRadius=(cov_1fipa09eqy.s[52]++,geofenceFound.radius);cov_1fipa09eqy.s[53]++;return this.get(childId).then(currentUser=>{cov_1fipa09eqy.f[5]++;cov_1fipa09eqy.s[54]++;return childCollection.updateOne({_id:childId},{$addToSet:{geofences:{geofenceId:geofencesId,geofenceName:geofencingName,formattedAddress:geofenceAddress,lat:foundLat,lng:foundLng,radius:parseInt(foundRadius),CreatedAt:new Date()}}});});},//Updates children's lastKnownLat, lastKnownLng
async updateChild(childId,lastKnownLat,lastKnownLng){cov_1fipa09eqy.f[6]++;cov_1fipa09eqy.s[55]++;if(!childId){cov_1fipa09eqy.b[14][0]++;cov_1fipa09eqy.s[56]++;throw"Invalid Input.";}else{cov_1fipa09eqy.b[14][1]++;}cov_1fipa09eqy.s[57]++;if(!lastKnownLat){cov_1fipa09eqy.b[15][0]++;cov_1fipa09eqy.s[58]++;throw"You must provide lattitude";}else{cov_1fipa09eqy.b[15][1]++;}cov_1fipa09eqy.s[59]++;if(!lastKnownLng){cov_1fipa09eqy.b[16][0]++;cov_1fipa09eqy.s[60]++;throw"You must provide longtitude";}else{cov_1fipa09eqy.b[16][1]++;}cov_1fipa09eqy.s[61]++;await this.get(childId);const childrenCollection=(cov_1fipa09eqy.s[62]++,await children());const updatedChild=(cov_1fipa09eqy.s[63]++,{lastKnownLat:lastKnownLat,lastKnownLng:lastKnownLng,lastUpdated:new Date()});const updatedInfo=(cov_1fipa09eqy.s[64]++,await childrenCollection.updateOne({_id:childId},{$set:updatedChild}));cov_1fipa09eqy.s[65]++;if(updatedInfo.modifiedCount===0){cov_1fipa09eqy.b[17][0]++;cov_1fipa09eqy.s[66]++;throw"could not update successfully";}else{cov_1fipa09eqy.b[17][1]++;}cov_1fipa09eqy.s[67]++;return await this.get(childId);},//updating an existing child fcmToken
async updateChildFCMToken(child_id,childToken){cov_1fipa09eqy.f[7]++;cov_1fipa09eqy.s[68]++;if(!child_id){cov_1fipa09eqy.b[18][0]++;cov_1fipa09eqy.s[69]++;throw"NO ID";}else{cov_1fipa09eqy.b[18][1]++;}cov_1fipa09eqy.s[70]++;if(!childToken){cov_1fipa09eqy.b[19][0]++;cov_1fipa09eqy.s[71]++;throw"NO TOKEN";}else{cov_1fipa09eqy.b[19][1]++;}const parsedId=(cov_1fipa09eqy.s[72]++,ObjectId(child_id));const found_child=(cov_1fipa09eqy.s[73]++,await this.get(parsedId));//possibly change this to children?
const found_id=(cov_1fipa09eqy.s[74]++,found_child._id);const childrenCollection=(cov_1fipa09eqy.s[75]++,await children());const updatedUser=(cov_1fipa09eqy.s[76]++,{fcmToken:childToken});const updatedInfo=(cov_1fipa09eqy.s[77]++,await childrenCollection.updateOne({_id:found_id},{$set:updatedUser}));cov_1fipa09eqy.s[78]++;if(updatedInfo.modifiedCount===0){cov_1fipa09eqy.b[20][0]++;cov_1fipa09eqy.s[79]++;throw"could not update successfully";}else{cov_1fipa09eqy.b[20][1]++;}cov_1fipa09eqy.s[80]++;return await this.get(parsedId);},async addGeofenceAlerts(alertId,child_id,geofence_id,latitude,longtitude,accuracy,speed,altitude,bearing,timestamp){cov_1fipa09eqy.f[8]++;cov_1fipa09eqy.s[81]++;// convertedAlertId = ObjectId(alertId)
childCollection=await children();const parsedChildId=(cov_1fipa09eqy.s[82]++,ObjectId(child_id));cov_1fipa09eqy.s[83]++;childFound=await childCollection.findOne({_id:parsedChildId},{projection:{_id:1}});let childId=(cov_1fipa09eqy.s[84]++,childFound._id);cov_1fipa09eqy.s[85]++;geofenceCollection=await geofences();const parsedGeofenceId=(cov_1fipa09eqy.s[86]++,ObjectId(geofence_id));cov_1fipa09eqy.s[87]++;geofenceFound=await geofenceCollection.findOne({_id:parsedGeofenceId});let geofencesId=(cov_1fipa09eqy.s[88]++,geofenceFound._id);var geofencingName=(cov_1fipa09eqy.s[89]++,geofenceFound.geofenceName);///not working
cov_1fipa09eqy.s[90]++;console.log(alertId);cov_1fipa09eqy.s[91]++;return this.get(childId).then(currentUser=>{cov_1fipa09eqy.f[9]++;cov_1fipa09eqy.s[92]++;return childCollection.updateOne({_id:childId},{$addToSet:{alerts:{_id:alertId,geofenceId:geofencesId,geofenceName:geofencingName,latitude:latitude,longtitude:longtitude,accuracy:accuracy,speed:speed,altitude:altitude,bearing:bearing,timestamp:timestamp,addedAt:new Date()}}});});},async returnLatestAlerts(parsedReceivedChildId){cov_1fipa09eqy.f[10]++;cov_1fipa09eqy.s[93]++;childrenCollection=await children();// const returnedAlertHistory = await childrenCollection.findOne( { "_id": parsedReceivedChildId }); //, { "alerts": {$slice: 5 } } );
// var sortedarray = _.orderBy(returnedAlertHistory, ['alerts.timestamp'], ['desc'])
// const returnedAlertHistory = await childrenCollection.find({ "_id": parsedReceivedChildId }).toArray();
// var alertsArray = returnedAlertHistory.alerts
// // // const { alerts } = returnedAlertHistory;
// // console.log(returnedAlertHistory)
const returnedAlertHistory=(cov_1fipa09eqy.s[94]++,await childrenCollection.aggregate({$match:{_id:parsedReceivedChildId}},// Expand the scores array into a stream of documents
{$unwind:'$alerts'},// Sort in descending order
{$sort:{'alerts.timestamp':-1}}).toArray());var keyArray=(cov_1fipa09eqy.s[95]++,returnedAlertHistory.map(function(item){cov_1fipa09eqy.f[11]++;cov_1fipa09eqy.s[96]++;return item["alerts"];}));cov_1fipa09eqy.s[97]++;console.log(keyArray);var mostRecentAlerts=(cov_1fipa09eqy.s[98]++,keyArray.slice(Math.max(keyArray.length-5,0)));// console.log(mostRecentAlerts)
cov_1fipa09eqy.s[99]++;return mostRecentAlerts;}};