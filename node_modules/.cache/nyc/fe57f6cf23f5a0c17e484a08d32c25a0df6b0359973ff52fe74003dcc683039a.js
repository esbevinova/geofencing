var cov_swl8ey96t=function(){var path="/Users/katya/Documents/GitHub/geofencing/routes/childAdded.js";var hash="4d2d0583923e99f4fb5aa6c87bdf0c80fb30ae4c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/katya/Documents/GitHub/geofencing/routes/childAdded.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:15},end:{line:2,column:31}},"2":{start:{line:3,column:13},end:{line:3,column:31}},"3":{start:{line:4,column:14},end:{line:4,column:28}},"4":{start:{line:6,column:0},end:{line:23,column:5}},"5":{start:{line:8,column:4},end:{line:20,column:5}},"6":{start:{line:10,column:21},end:{line:10,column:39}},"7":{start:{line:11,column:25},end:{line:11,column:48}},"8":{start:{line:12,column:8},end:{line:14,column:9}},"9":{start:{line:13,column:12},end:{line:13,column:31}},"10":{start:{line:15,column:8},end:{line:18,column:10}},"11":{start:{line:19,column:8},end:{line:19,column:14}},"12":{start:{line:22,column:4},end:{line:22,column:130}},"13":{start:{line:25,column:2},end:{line:25,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:16},end:{line:6,column:17}},loc:{start:{line:6,column:36},end:{line:23,column:3}},line:6}},branchMap:{"0":{loc:{start:{line:8,column:4},end:{line:20,column:5}},type:"if",locations:[{start:{line:8,column:4},end:{line:20,column:5}},{start:{line:8,column:4},end:{line:20,column:5}}],line:8},"1":{loc:{start:{line:12,column:8},end:{line:14,column:9}},type:"if",locations:[{start:{line:12,column:8},end:{line:14,column:9}},{start:{line:12,column:8},end:{line:14,column:9}}],line:12}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"4d2d0583923e99f4fb5aa6c87bdf0c80fb30ae4c"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const express=(cov_swl8ey96t.s[0]++,require("express"));const router=(cov_swl8ey96t.s[1]++,express.Router());const data=(cov_swl8ey96t.s[2]++,require("../data"));const users=(cov_swl8ey96t.s[3]++,data.usersData);cov_swl8ey96t.s[4]++;router.get("/",async(req,res)=>{cov_swl8ey96t.f[0]++;cov_swl8ey96t.s[5]++;//checks for authorization. If not logged in show 401 error otherwise render /childAdded if successful
if(req.session.authority==true){cov_swl8ey96t.b[0][0]++;var userID=(cov_swl8ey96t.s[6]++,req.session.userID);var userResult=(cov_swl8ey96t.s[7]++,await users.get(userID));cov_swl8ey96t.s[8]++;if(userResult==null){cov_swl8ey96t.b[1][0]++;cov_swl8ey96t.s[9]++;userResult=["NA"];}else{cov_swl8ey96t.b[1][1]++;}cov_swl8ey96t.s[10]++;res.status(200).render("childAdded",{userResult:userResult});cov_swl8ey96t.s[11]++;return;}else{cov_swl8ey96t.b[0][1]++;}cov_swl8ey96t.s[12]++;res.status(401).render('errorPage',{e:{statusCode:"401",error:"You are not logged in, please login",redirect:"/"}});});cov_swl8ey96t.s[13]++;module.exports=router;