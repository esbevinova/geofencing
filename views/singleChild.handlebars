<body>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="/public/css/singleChild.css">

<!-- Navigation -->
{{> navigation }}

<div class="container">

  <div id="childName">
  <h1>{{myChild.firstN}} {{myChild.lastN}}</h1>
</div> <!-- end id childName -->

<div id="childPhoneNumber">
  <h3>Phone: {{myChild.childPhoneNumber}}</h3>
</div> <!-- end id childName -->


<!-- Geofences -->
<div class="box">
  <h1>Active Geofences</h1>
    {{#each myGeofences as |geoFence|}}
    {{#with geoFence}}
    <table class='table table-striped' id="geofences">
      <label><h2>{{geoFence.geofenceName}}</h2></label>
      <tr>
        <ul>
          <li>Address: {{geoFence.formattedAddress}}</li>
          <li>Radius: {{geoFence.radius}}</li>
        </ul>
      </tr>
    </table>
    {{/with}}
    {{/each}}

</div> <!-- end class box -->

<!-- map-->
<div  id="map_box_padding">
  <div class="box" id="map_box">
    <div id="map">
      <div id="childLocation" data-child-id={{myChild._id}} data-lat={{myChild.lastKnownLat}} data-lng={{myChild.lastKnownLng}} data-name={{myChild.firstN}}></div>
    {{#each myGeofences as |geoFence|}}
    {{#with geoFence}}
    <div id="markers-{{geoFence._id}}" data-lat={{geoFence.lat}} data-lng={{geoFence.lng}} data-radius={{geoFence.radius}} data-name={{geoFence.geofenceName}}></div>
    {{/with}}
    {{/each}}
    </div> <!-- End class map -->



     <!-- JavaScript map --->
    <script>

    var map;

    function initMap(){

    
      var center = {
        lat: parseFloat(document.getElementById('map').getAttribute("data-lat")), 
        lng: parseFloat(document.getElementById('map').getAttribute("data-lng"))
      };
      
      //var mapGeofence = {
      //  name: document.getElementById('markers').getAttribute("data-name"),
      //  lat: parseFloat(document.getElementById('markers').getAttribute("data-lat")),
      //  lng: parseFloat(document.getElementById('markers').getAttribute("data-lng")),
      //  radius: parseFloat(document.getElementById('markers').getAttribute("data-radius"))
      //};

      var childLocation = {
        lat: parseFloat(document.getElementById('childLocation').getAttribute("data-lat")), 
        lng: parseFloat(document.getElementById('childLocation').getAttribute("data-lng"))
      }

      const allGeoFences = document.querySelectorAll('div[id^="markers"]');

      const allGeoFencesObjects = Object.values(allGeoFences).map(geoFenceDom => ({
        name: geoFenceDom.getAttribute('data-name'),
        lat: parseFloat(geoFenceDom.getAttribute('data-lat')),
        lng: parseFloat(geoFenceDom.getAttribute('data-lng')),
        radius: parseFloat(geoFenceDom.getAttribute('data-radius'))
      }))
      
        
      map = new google.maps.Map(document.getElementById('map'), {
        center: childLocation,
        zoom: 14
      });




        //marks
        var kidLocation = new google.maps.Marker({
        position: childLocation,
        map: map,
        icon: "http://maps.google.com/mapfiles/kml/paddle/grn-stars.png"
        });


      allGeoFencesObjects.forEach(geoFenceObj => {

        //marks
        var marker = new google.maps.Marker({
        position: geoFenceObj,
        map: map
        });

        //adds radius
        var circle = new google.maps.Circle({
        map: map,
        radius: geoFenceObj.radius,
        fillColor: '#AA0000'
        });
        circle.bindTo('center', marker, 'position');

        //adds Name to Geofence on click
        var infoWindow = new google.maps.InfoWindow({
          content:geoFenceObj.name
        });
        marker.addListener('click', function(){
          infoWindow.open(map, marker);
        });  
      })
    }

    </script>
    
  </div> <!-- end class box -->
</div> <!-- end class map_box_padding -->

<div id="alerts">
  <h1>Alert History</h1>
</div> <!-- end id alerts -->

<!-- Geofences -->
<div class="alert-box">
  <ul id="myfences">
    <table class='table table-striped' id="alertsTable">
    {{#each alerts as |alert|}}
    {{#with alert}}
    <div>Child has crossed <strong>{{alert.geofenceName}}</strong> Geofence on {{alert.timestamp}}</div>
      {{!-- <label><h2>{{alert.geofenceName}}</h2></label>
      <tr>
        <ul>
          <li>Latitute: {{alert.latitude}}</li>
          <li>Longtitude: {{alert.longtitude}}</li>
        </ul>
      </tr> --}}
    {{/with}}
    {{/each}}
    </table>
  </ul>
</div> <!-- end class alert-box -->
<div id="padding"></div>

</div> <!-- end class container -->

  <!-- Footer -->
{{> footer }}

<!-- Google map API -->
<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDAvtiMO_fBipcjY_VBJF-1px9GVBfSLiQ&callback=initMap" async defer></script>
<script>
  const childId = document.getElementById('childLocation').getAttribute('data-child-id')
  setInterval(async () => {
    const res = await fetch(`/singleChild/${childId}/json`, { method: 'GET' });
    const newChildLocation = await res.json();

    console.log(newChildLocation);

  }, 2000);
</script>
</body>